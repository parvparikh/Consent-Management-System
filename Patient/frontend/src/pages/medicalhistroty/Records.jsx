import  * as React from 'react';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import Box from '@mui/material/Box';
import Modal from '@mui/material/Modal';
import Button from '@mui/material/Button';
import CloseIcon from '@mui/icons-material/Close';
import Typography from '@mui/material/Typography';
import MedicalRecordsService from "../../services/MedicalRecordsService";
import { useEffect, useState } from "react";




export default function Records() {
    const [open, setOpen] = React.useState(false);
    const handleOpen = () => setOpen(true);
    const handleClose = () => setOpen(false);
    const id='PAT01';
    const [loading, setLoading] = useState(true);
    const [records, setRecords] = useState(null);
    
    const style = {
        position: 'absolute',
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)',
        width:' 50%',
        scrollY:true,
        bgcolor: 'background.paper',
        border: '2px solid #000',
        // boxShadow: 24,
        p: 4,
      };
    
      useEffect(() => {
        const fetchData = async () => {
          setLoading(true);
          try {
            const response = await MedicalRecordsService.getMedicalRecordsId(id);
            let res=response.data['finalRecordsList'];
          console.log(res)
            setRecords(res);
          } catch (error) {
            console.log(error);
          }
          setLoading(false);
        };
        fetchData();
      }, []);




  return (
    <TableContainer component={Paper}>
      <Table sx={{ minWidth: 550}} aria-label="simple table">
        <TableHead sx={{ backgroundColor:"whitesmoke" }}>
          <TableRow>
            <TableCell>Date</TableCell>
            <TableCell align="left">Generated By</TableCell>
            <TableCell align="left">Hospital Name</TableCell>
            <TableCell align="left">Record Type</TableCell>
            <TableCell align="left">Tags</TableCell>
          </TableRow>
        </TableHead>
        <TableBody sx={{ backgroundColor:"white" }}>
          { !loading &&records.map((row,id) => (
            <TableRow
              key={IDBCursor}
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
            >
              <TableCell component="th" scope="row">
                {row.gen_date}
              </TableCell>
              <TableCell align="left">{row.dname}</TableCell>
              <TableCell align="left">{row.ename+" "+row.etype}</TableCell>
              <TableCell align="left"><Button onClick={handleOpen}>{row.rec_type}</Button>
      <Modal
        keepMounted
        open={open}
        onClose={handleClose}
        aria-labelledby="keep-mounted-modal-title"
        aria-describedby="keep-mounted-modal-description"
        
        
      >
        <Box sx={style}>
          <Typography id="keep-mounted-modal-title" variant="h6" component="h2">
            {row.rec_type}
          </Typography>
          <Typography id="keep-mounted-modal-description" sx={{ mt: 2 ,whiteSpace:"pre"}}>
          <strong>Date : </strong>{row.gen_date} <br/>
          <strong>Generated By :</strong> {row.dname}<br/>
          <strong>Tags : </strong>{row.tags}

            <br/>{row.desc.split("<br/>")}
           
          </Typography>
         <Button sx={{ mx: 38 }} variant="contained" className='btn btn-primary' startIcon={<CloseIcon/>} onClick={handleClose}>Close</Button>
        </Box>

      </Modal></TableCell>
              <TableCell align="left">{row.tags}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
  );
}